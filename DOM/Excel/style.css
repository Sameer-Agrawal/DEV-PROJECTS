/*
em --> 1em = 1 * parent's font size...similarly 3em = 3 * parent's font size
rem --> 1rem = 1 * html tag's font size...similarly 3rem = 3 * html tag's font size
vw --> 50vw = 50% of viewport width/device width in which the website is opened
vh --> 50vh = 50% of viewport height/device height in which the website is opened
% --> width : 50% = 50% of parent's width 
*/

/* 
A fixed position element is positioned relative to the viewport, or the browser window itself. The viewport doesn't change when the window is scrolled, so a fixed positioned element will stay right where it is when the page is scrolled
Sticky positioning is a hybrid of relative and fixed positioning. The element is treated as relative positioned when window is fixed initially, at which point it is treated as fixed positioned
*/

*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

/* box-sizing: border-box  --> Represent content size, padding, border is inclusive of element size provided */

.taskbarContainer{
    height: 9.5vh;
    background-color: #C9D6DF;
    z-index: 2;
}

/* 
Z Index ( z-index ) is a CSS property that defines the order of overlapping HTML elements. Elements with a higher index will be placed on top of elements with a lower index.
*/

.cellContainer{
    height: calc(100vh - 14vh);
    background-color: #F0F5F9;
    position: relative;
    overflow: auto;
}

/* The overflow property specifies whether to clip the content or to add scrollbars when the content of an element is too big to fit in the specified area 
    scroll - The overflow is clipped, and a scrollbar is added to see the rest of the content
    auto - Similar to scroll, but it adds scrollbars only when necessary
    overflow-x - auto --> When content overflow in x direction
*/

/* Abstract --> calc() --> The calc() function performs numeric calculation to be used as the property value. */

.sheetAnchor{
    height: 4.5vh;
    background-color: #C9D6DF;
}

/* Style cell Element */

.rowElement{
    display: flex;
}

.cellElement{
    height: 20px;
    width: 125px;
    border: 0.01px solid #C9D6DF;
    overflow-x: scroll;
    outline: none;
}

.column-identifier-row{
    position: absolute;
    left: 40px;
    z-index: 2;
}

/* position : absolute --> Element removal, document flow */

.column-identifier-element{
    text-align: center;
    background-color: lightgreen;
}

.row-identifier-column{
    height: calc(100vh - 13.5vh);
    background-color: lightblue;
    position: absolute;
    left: 0px;
    top: 20px;
    width: 40px;
    z-index: 2;
}

.row-identifier-element{
    width: 100%;
    height: 20px;
    text-align: center;
    border: 0.01px solid #C9D6DF;
}

/* text-align: center --> Center a text, within an element */

.top-left-cell{
    width: 40px;
    height: 20px;
    border: 0.01px solid #C9D6DF;
    background-color: aquamarine;
    position: absolute;
    left: 0px;
    z-index: 3;
}

.mutable-cell-container{
    position: absolute;
    top: 20px;
    left: 40px;
}

.assistContainer{
    height: 2.5vh;
    background-color:red;
    position: relative;
    top:7vh;
}

.labelElement{
    height: 100%;
    width: 40px;
    background-color: #C9D6DF;
    outline: none;
    text-align: center;
}
